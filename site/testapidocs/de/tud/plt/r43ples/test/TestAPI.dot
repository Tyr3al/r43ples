#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.tud.plt.r43ples.test.TestAPI
	c144 [label=<<table title="de.tud.plt.r43ples.test.TestAPI" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./TestAPI.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TestAPI </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TestAPI() </td></tr>
<tr><td align="left" balign="left"> # configure() : Application </td></tr>
<tr><td align="left" balign="left"> + setUpBeforeClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownAfterClass() </td></tr>
<tr><td align="left" balign="left"> + testGetRevisedGraphs() </td></tr>
<tr><td align="left" balign="left"> + testGetRevisedGraphsJSON() </td></tr>
<tr><td align="left" balign="left"> + testGetRevisedGraphsTurtle() </td></tr>
		</table></td></tr>
		</table>>, URL="./TestAPI.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//de.tud.plt.r43ples.test.TestAPI extends org.glassfish.jersey.test.JerseyTest
	c168:p -> c144:p [dir=back,arrowtail=empty];
	// org.glassfish.jersey.test.JerseyTest
	c168 [label=<<table title="org.glassfish.jersey.test.JerseyTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/glassfish/jersey/test/JerseyTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> JerseyTest </font></td></tr>
<tr><td align="center" balign="center"> org.glassfish.jersey.test </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JerseyTest() </td></tr>
<tr><td align="left" balign="left"> + JerseyTest(arg0 : org.glassfish.jersey.test.spi.TestContainerFactory) </td></tr>
<tr><td align="left" balign="left"> + JerseyTest(arg0 : javax.ws.rs.core.Application) </td></tr>
<tr><td align="left" balign="left"> # enable(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # disable(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # forceEnable(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # forceDisable(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # set(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> # set(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # forceSet(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # isEnabled(arg0 : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> # configure() : javax.ws.rs.core.Application </td></tr>
<tr><td align="left" balign="left"> # configureDeployment() : org.glassfish.jersey.test.DeploymentContext </td></tr>
<tr><td align="left" balign="left"> # getTestContainerFactory() : org.glassfish.jersey.test.spi.TestContainerFactory </td></tr>
<tr><td align="left" balign="left"> + target() : javax.ws.rs.client.WebTarget </td></tr>
<tr><td align="left" balign="left"> + target(arg0 : java.lang.String) : javax.ws.rs.client.WebTarget </td></tr>
<tr><td align="left" balign="left"> + client() : javax.ws.rs.client.Client </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> # getClient() : javax.ws.rs.client.Client </td></tr>
<tr><td align="left" balign="left"> # setClient(arg0 : javax.ws.rs.client.Client) : javax.ws.rs.client.Client </td></tr>
<tr><td align="left" balign="left"> # configureClient(arg0 : org.glassfish.jersey.client.ClientConfig) </td></tr>
<tr><td align="left" balign="left"> # getBaseUri() : java.net.URI </td></tr>
<tr><td align="left" balign="left"> # getPort() : int </td></tr>
<tr><td align="left" balign="left"> # getLoggedRecords() : java.util.List&lt;java.util.logging.LogRecord&gt; </td></tr>
<tr><td align="left" balign="left"> # getLastLoggedRecord() : java.util.logging.LogRecord </td></tr>
<tr><td align="left" balign="left"> # getAsyncTimeoutMultiplier() : int </td></tr>
<tr><td align="left" balign="left"> + close(arg0 : javax.ws.rs.core.Response[]) </td></tr>
<tr><td align="left" balign="left"> + closeIfNotNull(arg0 : javax.ws.rs.client.Client[]) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/glassfish/jersey/test/JerseyTest.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

