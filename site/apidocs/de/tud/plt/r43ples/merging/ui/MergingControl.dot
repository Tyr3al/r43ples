#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.tud.plt.r43ples.merging.MergeResult
	c3448 [label=<<table title="de.tud.plt.r43ples.merging.MergeResult" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../MergeResult.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MergeResult </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + graph : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + branchA : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + branchB : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + hasConflict : boolean </td></tr>
<tr><td align="left" balign="left"> + newRevisionNumber : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + conflictModel : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + graphDiff : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + commonRevision : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + graphStrategy : java.lang.String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MergeResult(commit : de.tud.plt.r43ples.management.R43plesMergeCommit) </td></tr>
		</table></td></tr>
		</table>>, URL="../MergeResult.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.MergeCommitModel
	c3457 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.MergeCommitModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../model/structure/MergeCommitModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MergeCommitModel </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MergeCommitModel(graphName : java.lang.String, sddName : java.lang.String, user : java.lang.String, message : java.lang.String, branch1 : java.lang.String, branch2 : java.lang.String, strategy : java.lang.String, type : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getGraphName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getSddName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getUser() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getMessage() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getBranch1() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getBranch2() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getStrategy() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getType() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getReportView() : java.lang.String </td></tr>
		</table></td></tr>
		</table>>, URL="../model/structure/MergeCommitModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.Individual
	c3458 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.Individual" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../model/structure/Individual.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Individual </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + resourceUri : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + triplesBranchA : java.util.HashMap&lt;de.tud.plt.r43ples.merging.model.structure.Triple, java.lang.Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + triplesBranchB : java.util.HashMap&lt;de.tud.plt.r43ples.merging.model.structure.Triple, java.lang.Boolean&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Individual() </td></tr>
		</table></td></tr>
		</table>>, URL="../model/structure/Individual.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableModel
	c3460 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../model/structure/HighLevelChangeTableModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HighLevelChangeTableModel </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HighLevelChangeTableModel() </td></tr>
<tr><td align="left" balign="left"> + readTableRow(tableRow : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableRow) </td></tr>
<tr><td align="left" balign="left"> + getTripleRowList() : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableRow&gt; </td></tr>
<tr><td align="left" balign="left"> + setTripleRowList(tripleRowList : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableRow&gt;) </td></tr>
<tr><td align="left" balign="left"> + getManuellTriple() : java.util.Map&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableRow&gt; </td></tr>
<tr><td align="left" balign="left"> + setManuellTriple(manuellTriple : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableRow&gt;) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
		</table></td></tr>
		</table>>, URL="../model/structure/HighLevelChangeTableModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel
	c3462 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../model/structure/HighLevelChangeModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HighLevelChangeModel </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HighLevelChangeModel() </td></tr>
<tr><td align="left" balign="left"> + getHighLevelChangesRenaming() : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.HighLevelChangeRenaming&gt; </td></tr>
<tr><td align="left" balign="left"> + setHighLevelChangesRenaming(highLevelChangesRenaming : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.HighLevelChangeRenaming&gt;) </td></tr>
<tr><td align="left" balign="left"> + addHighLevelChangeRenaming(identifier : java.lang.String, highLevelChangeRenaming : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeRenaming) </td></tr>
<tr><td align="left" balign="left"> + removeHighLevelChangeRenaming(identifier : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
		</table></td></tr>
		</table>>, URL="../model/structure/HighLevelChangeModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceModel
	c3463 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.DifferenceModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../model/structure/DifferenceModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DifferenceModel </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + allDifferences : java.util.ArrayList&lt;de.tud.plt.r43ples.merging.model.structure.Difference&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DifferenceModel() </td></tr>
<tr><td align="left" balign="left"> + addDifferenceGroup(identifier : java.lang.String, differenceGroup : de.tud.plt.r43ples.merging.model.structure.DifferenceGroup) </td></tr>
<tr><td align="left" balign="left"> + addDifference(difference : de.tud.plt.r43ples.merging.model.structure.Difference) </td></tr>
<tr><td align="left" balign="left"> + removeDifferenceGroup(identifier : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getDifferenceGroups() : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.DifferenceGroup&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../model/structure/DifferenceModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.ui.MergingControl
	c3466 [label=<<table title="de.tud.plt.r43ples.merging.ui.MergingControl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./MergingControl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MergingControl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MergingControl() </td></tr>
<tr><td align="left" balign="left"> + getViewHtmlOutput() : String </td></tr>
<tr><td align="left" balign="left"> + getMergeProcess(commitModel : MergeCommitModel, mresult : MergeResult) </td></tr>
<tr><td align="left" balign="left"> + createIndividualsList(commitModel : MergeCommitModel, jenaModel : Model) : List&lt;Individual&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./MergingControl.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.ui.MergingControl NAVASSOC de.tud.plt.r43ples.merging.model.structure.DifferenceModel
	c3466:p -> c3463:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.ui.MergingControl NAVASSOC de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel
	c3466:p -> c3462:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.ui.MergingControl NAVASSOC de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableModel
	c3466:p -> c3460:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.ui.MergingControl NAVASSOC de.tud.plt.r43ples.merging.model.structure.MergeCommitModel
	c3466:p -> c3457:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.ui.MergingControl NAVASSOC de.tud.plt.r43ples.merging.model.structure.Individual
	c3466:p -> c3458:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.ui.MergingControl DEPEND com.hp.hpl.jena.rdf.model.Model
	c3466:p -> c3491:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// de.tud.plt.r43ples.merging.ui.MergingControl DEPEND de.tud.plt.r43ples.merging.model.structure.MergeCommitModel
	c3466:p -> c3457:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// de.tud.plt.r43ples.merging.ui.MergingControl DEPEND de.tud.plt.r43ples.merging.MergeResult
	c3466:p -> c3448:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.hp.hpl.jena.rdf.model.Model
	c3491 [label=<<table title="com.hp.hpl.jena.rdf.model.Model" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/com/hp/hpl/jena/rdf/model/Model.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Model </td></tr>
<tr><td align="center" balign="center"> com.hp.hpl.jena.rdf.model </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + size() : long </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + listSubjects() : com.hp.hpl.jena.rdf.model.ResIterator </td></tr>
<tr><td align="left" balign="left"> + listNameSpaces() : com.hp.hpl.jena.rdf.model.NsIterator </td></tr>
<tr><td align="left" balign="left"> + getResource(arg0 : java.lang.String) : com.hp.hpl.jena.rdf.model.Resource </td></tr>
<tr><td align="left" balign="left"> + getProperty(arg0 : java.lang.String, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Property </td></tr>
<tr><td align="left" balign="left"> + createResource() : com.hp.hpl.jena.rdf.model.Resource </td></tr>
<tr><td align="left" balign="left"> + createResource(arg0 : com.hp.hpl.jena.rdf.model.AnonId) : com.hp.hpl.jena.rdf.model.Resource </td></tr>
<tr><td align="left" balign="left"> + createResource(arg0 : java.lang.String) : com.hp.hpl.jena.rdf.model.Resource </td></tr>
<tr><td align="left" balign="left"> + createProperty(arg0 : java.lang.String, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Property </td></tr>
<tr><td align="left" balign="left"> + createLiteral(arg0 : java.lang.String, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Literal </td></tr>
<tr><td align="left" balign="left"> + createLiteral(arg0 : java.lang.String, arg1 : boolean) : com.hp.hpl.jena.rdf.model.Literal </td></tr>
<tr><td align="left" balign="left"> + createTypedLiteral(arg0 : java.lang.String, arg1 : com.hp.hpl.jena.datatypes.RDFDatatype) : com.hp.hpl.jena.rdf.model.Literal </td></tr>
<tr><td align="left" balign="left"> + createTypedLiteral(arg0 : java.lang.Object, arg1 : com.hp.hpl.jena.datatypes.RDFDatatype) : com.hp.hpl.jena.rdf.model.Literal </td></tr>
<tr><td align="left" balign="left"> + createTypedLiteral(arg0 : java.lang.Object) : com.hp.hpl.jena.rdf.model.Literal </td></tr>
<tr><td align="left" balign="left"> + createStatement(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property, arg2 : com.hp.hpl.jena.rdf.model.RDFNode) : com.hp.hpl.jena.rdf.model.Statement </td></tr>
<tr><td align="left" balign="left"> + createList() : com.hp.hpl.jena.rdf.model.RDFList </td></tr>
<tr><td align="left" balign="left"> + createList(arg0 : java.util.Iterator&lt;?&gt;) : com.hp.hpl.jena.rdf.model.RDFList </td></tr>
<tr><td align="left" balign="left"> + createList(arg0 : com.hp.hpl.jena.rdf.model.RDFNode[]) : com.hp.hpl.jena.rdf.model.RDFList </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : com.hp.hpl.jena.rdf.model.Statement) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : com.hp.hpl.jena.rdf.model.Statement[]) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : com.hp.hpl.jena.rdf.model.Statement[]) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : java.util.List&lt;com.hp.hpl.jena.rdf.model.Statement&gt;) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : java.util.List&lt;com.hp.hpl.jena.rdf.model.Statement&gt;) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : com.hp.hpl.jena.rdf.model.StmtIterator) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : com.hp.hpl.jena.rdf.model.Model) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.io.InputStream, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.io.InputStream, arg1 : java.lang.String, arg2 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.io.Reader, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.lang.String, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.io.Reader, arg1 : java.lang.String, arg2 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + read(arg0 : java.lang.String, arg1 : java.lang.String, arg2 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : java.io.Writer) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : java.io.Writer, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : java.io.Writer, arg1 : java.lang.String, arg2 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : java.io.OutputStream) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : java.io.OutputStream, arg1 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + write(arg0 : java.io.OutputStream, arg1 : java.lang.String, arg2 : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : com.hp.hpl.jena.rdf.model.Statement) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + getRequiredProperty(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property) : com.hp.hpl.jena.rdf.model.Statement </td></tr>
<tr><td align="left" balign="left"> + getProperty(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property) : com.hp.hpl.jena.rdf.model.Statement </td></tr>
<tr><td align="left" balign="left"> + listSubjectsWithProperty(arg0 : com.hp.hpl.jena.rdf.model.Property) : com.hp.hpl.jena.rdf.model.ResIterator </td></tr>
<tr><td align="left" balign="left"> + listResourcesWithProperty(arg0 : com.hp.hpl.jena.rdf.model.Property) : com.hp.hpl.jena.rdf.model.ResIterator </td></tr>
<tr><td align="left" balign="left"> + listSubjectsWithProperty(arg0 : com.hp.hpl.jena.rdf.model.Property, arg1 : com.hp.hpl.jena.rdf.model.RDFNode) : com.hp.hpl.jena.rdf.model.ResIterator </td></tr>
<tr><td align="left" balign="left"> + listResourcesWithProperty(arg0 : com.hp.hpl.jena.rdf.model.Property, arg1 : com.hp.hpl.jena.rdf.model.RDFNode) : com.hp.hpl.jena.rdf.model.ResIterator </td></tr>
<tr><td align="left" balign="left"> + listObjects() : com.hp.hpl.jena.rdf.model.NodeIterator </td></tr>
<tr><td align="left" balign="left"> + listObjectsOfProperty(arg0 : com.hp.hpl.jena.rdf.model.Property) : com.hp.hpl.jena.rdf.model.NodeIterator </td></tr>
<tr><td align="left" balign="left"> + listObjectsOfProperty(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property) : com.hp.hpl.jena.rdf.model.NodeIterator </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsResource(arg0 : com.hp.hpl.jena.rdf.model.RDFNode) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property, arg2 : com.hp.hpl.jena.rdf.model.RDFNode) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : com.hp.hpl.jena.rdf.model.Statement) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAny(arg0 : com.hp.hpl.jena.rdf.model.StmtIterator) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(arg0 : com.hp.hpl.jena.rdf.model.StmtIterator) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAny(arg0 : com.hp.hpl.jena.rdf.model.Model) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(arg0 : com.hp.hpl.jena.rdf.model.Model) : boolean </td></tr>
<tr><td align="left" balign="left"> + isReified(arg0 : com.hp.hpl.jena.rdf.model.Statement) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAnyReifiedStatement(arg0 : com.hp.hpl.jena.rdf.model.Statement) : com.hp.hpl.jena.rdf.model.Resource </td></tr>
<tr><td align="left" balign="left"> + removeAllReifications(arg0 : com.hp.hpl.jena.rdf.model.Statement) </td></tr>
<tr><td align="left" balign="left"> + removeReification(arg0 : com.hp.hpl.jena.rdf.model.ReifiedStatement) </td></tr>
<tr><td align="left" balign="left"> + listStatements() : com.hp.hpl.jena.rdf.model.StmtIterator </td></tr>
<tr><td align="left" balign="left"> + listStatements(arg0 : com.hp.hpl.jena.rdf.model.Selector) : com.hp.hpl.jena.rdf.model.StmtIterator </td></tr>
<tr><td align="left" balign="left"> + listStatements(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property, arg2 : com.hp.hpl.jena.rdf.model.RDFNode) : com.hp.hpl.jena.rdf.model.StmtIterator </td></tr>
<tr><td align="left" balign="left"> + createReifiedStatement(arg0 : com.hp.hpl.jena.rdf.model.Statement) : com.hp.hpl.jena.rdf.model.ReifiedStatement </td></tr>
<tr><td align="left" balign="left"> + createReifiedStatement(arg0 : java.lang.String, arg1 : com.hp.hpl.jena.rdf.model.Statement) : com.hp.hpl.jena.rdf.model.ReifiedStatement </td></tr>
<tr><td align="left" balign="left"> + listReifiedStatements() : com.hp.hpl.jena.rdf.model.RSIterator </td></tr>
<tr><td align="left" balign="left"> + listReifiedStatements(arg0 : com.hp.hpl.jena.rdf.model.Statement) : com.hp.hpl.jena.rdf.model.RSIterator </td></tr>
<tr><td align="left" balign="left"> + query(arg0 : com.hp.hpl.jena.rdf.model.Selector) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + union(arg0 : com.hp.hpl.jena.rdf.model.Model) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + intersection(arg0 : com.hp.hpl.jena.rdf.model.Model) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + difference(arg0 : com.hp.hpl.jena.rdf.model.Model) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + begin() : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + abort() : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + commit() : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + executeInTransaction(arg0 : com.hp.hpl.jena.shared.Command) : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> + independent() : boolean </td></tr>
<tr><td align="left" balign="left"> + supportsTransactions() : boolean </td></tr>
<tr><td align="left" balign="left"> + supportsSetOperations() : boolean </td></tr>
<tr><td align="left" balign="left"> + isIsomorphicWith(arg0 : com.hp.hpl.jena.rdf.model.Model) : boolean </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + getLock() : com.hp.hpl.jena.shared.Lock </td></tr>
<tr><td align="left" balign="left"> + register(arg0 : com.hp.hpl.jena.rdf.model.ModelChangedListener) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + unregister(arg0 : com.hp.hpl.jena.rdf.model.ModelChangedListener) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + notifyEvent(arg0 : java.lang.Object) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + removeAll() : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : com.hp.hpl.jena.rdf.model.Resource, arg1 : com.hp.hpl.jena.rdf.model.Property, arg2 : com.hp.hpl.jena.rdf.model.RDFNode) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + isClosed() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/com/hp/hpl/jena/rdf/model/Model.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

